{"version":3,"sources":["Component/Size.jsx","Component/Body.jsx","Component/Navbar.jsx","Component/enableproduct.jsx","Component/disableproduct.jsx","App.js","serviceWorker.js","index.js"],"names":["Size","state","list","inputvalue","id","handleinput","e","setState","target","value","Date","now","addlist","lists","console","log","deletelist","key","filter","className","placeholder","onChange","this","onClick","map","Component","Body","props","items","item","Name","onDelete","Navbar","showme","disableproduct","Enableproduct","Enable","Disable","App","style","fontSize","fontWeight","handledelete","handlesubmit","_name","push","counter","listse","forEach","data","allproduct","enable","c","disable","length","type","name","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9dca8222.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nclass Size extends Component {\r\n  state = {\r\n    list: [],\r\n    inputvalue: { id: \"\", Size: \"\" },\r\n  };\r\n\r\n  handleinput = (e) => {\r\n    this.setState({\r\n      inputvalue: {\r\n        Size: e.target.value,\r\n        id: Date.now(),\r\n      },\r\n    });\r\n  };\r\n\r\n  addlist = (e) => {\r\n    const list = this.state.inputvalue;\r\n    if (list.Size !== \"\") {\r\n      const lists = [...this.state.list, list];\r\n      this.setState({\r\n        list: lists,\r\n        inputvalue: { id: \"\", Size: \"\" },\r\n      });\r\n\r\n      console.log({ list });\r\n    }\r\n  };\r\n  deletelist = (key) => {\r\n    const list = this.state.list.filter((lists) => lists.id !== key);\r\n    this.setState({ list });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n          <label>Enter Product Size</label>\r\n          <input\r\n            placeholder=\"Enter Size\"\r\n            onChange={this.handleinput}\r\n            value={this.state.inputvalue.Size}\r\n          />\r\n          <button onClick={this.addlist} className=\"btn btn-info btn-sm m-2\">\r\n            Add Size\r\n          </button>\r\n          <br />\r\n        </div>\r\n\r\n        <div>\r\n          {this.state.list.map((lists) => (\r\n            <span key={lists.id}>\r\n              {lists.Size}\r\n\r\n              <button\r\n                className=\"btn btn-danger btn-sm\"\r\n                onClick={() => this.deletelist(lists.id)}\r\n              >\r\n                cut\r\n              </button>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Size;\r\n","import React, { Component } from \"react\";\r\nimport Size from \"./Size\";\r\nclass Body extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.items.map((item) => (\r\n          <div key={item.id}>\r\n            <span key={item.id}>\r\n              ProductID= {item.id}\r\n              <br />\r\n              Product Name= {item.Name}\r\n              <br />\r\n              <Size>Product Size</Size>\r\n              <br />\r\n              <button\r\n                onClick={() => this.props.onDelete(item.id)}\r\n                className=\"btn btn-sm btn-danger\"\r\n              >\r\n                Delete Product\r\n              </button>\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.lists.map((list) => {\r\n          return list.showme === false ? (\r\n            <div key={list.id}>\r\n              <span>ID: {list.id}</span>\r\n              <br />\r\n              <span>Name:{list.Name}</span>\r\n              <button onClick={() => this.props.disableproduct(list.id)}>\r\n                Disable\r\n              </button>\r\n              <button onClick={() => this.props.Enableproduct(list.id)}>\r\n                Enable\r\n              </button>\r\n            </div>\r\n          ) : null;\r\n        })}\r\n        {/* <div>\r\n          {this.props.lists.map((list) => {\r\n            return list.showme === true ? (\r\n              <div key={list.id}>\r\n                <span>ID: {list.id}</span>\r\n                <br />\r\n                <span>Name:{list.Name}</span>\r\n              </div>\r\n            ) : null;\r\n          })}\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n// {\r\n//   this.props.lists.map((lists) => (\r\n//     <div key={lists.id}>\r\n//       <span>ID: {lists.id}</span>\r\n//       <br />\r\n//       <span>Name:{lists.Name}</span>\r\n//     </div>\r\n//   ));\r\n// }\r\n","import React, { Component } from \"react\";\r\nclass Enable extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.lists.map((list) => {\r\n          return list.showme === true ? (\r\n            <div key={list.id}>\r\n              <span>ID: {list.id}</span>\r\n              <br />\r\n              <span>Name:{list.Name}</span>\r\n            </div>\r\n          ) : null;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Enable;\r\n","import React, { Component } from \"react\";\r\nclass Disable extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.lists.map((list) => {\r\n          return list.showme === false ? (\r\n            <div key={list.id}>\r\n              <span>ID: {list.id}</span>\r\n              <br />\r\n              <span>Name:{list.Name}</span>\r\n            </div>\r\n          ) : null;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Disable;\r\n","import React, { Component } from \"react\";\nimport Body from \"./Component/Body\";\nimport Navbar from \"./Component/Navbar\";\nimport Enable from \"./Component/enableproduct\";\nimport Disable from \"./Component/disableproduct\";\nclass App extends Component {\n  state = {\n    id: \"\",\n    Name: \"\",\n    showme: false,\n    items: [],\n    list: [],\n  };\n  style = {\n    fontSize: 10,\n    fontWeight: \"bold\",\n  };\n  handledelete = (key) => {\n    const items = this.state.items.filter((item) => item.id !== key);\n    this.setState({ items });\n    console.log({ items });\n  };\n\n  handlesubmit = () => {\n    const item = this.state.items;\n    const id = this.state.id;\n    const _name = this.state.Name;\n    const Showme = false;\n\n    item.push({ id: id, Name: _name, showme: Showme });\n    this.setState({\n      id: id,\n      Name: _name,\n      showme: Showme,\n    });\n    this.setState({ id: \"\", Name: \"\" });\n    console.log({ item });\n  };\n\n  disableproduct = (counter) => {\n    const listse = [...this.state.list];\n\n    listse.forEach((lists) => {\n      if (lists.id === counter) {\n        lists.showme = false;\n      }\n    });\n    const data = [...listse];\n    this.setState({ list: data });\n    console.log({ data });\n  };\n  Enableproduct = (counter) => {\n    const listse = [...this.state.list];\n\n    listse.forEach((lists) => {\n      if (lists.id === counter) {\n        lists.showme = true;\n      }\n    });\n    const data = [...listse];\n    this.setState({ list: data });\n    console.log({ data });\n  };\n\n  allproduct = () => {\n    const lists = this.state.items;\n\n    this.setState({ list: lists });\n    console.log({ lists });\n  };\n\n  enable = () => {\n    const enable = this.state.list.filter((c) => c.showme === true);\n    console.log(enable);\n  };\n  disable = () => {\n    const disable = this.state.list.filter((c) => c.showme === false);\n    console.log(disable);\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        enable= {this.state.list.filter((c) => c.showme === true).length}\n        disable={this.state.list.filter((c) => c.showme === false).length}\n        <nav className=\"navbar navbar-light bg-light\">\n          <button className=\"btn btn-sm btn-primary\" onClick={this.allproduct}>\n            All product\n          </button>\n\n          <button onClick={this.enable} className=\"btn btn-sm btn-primary\">\n            Enable product{\" \"}\n          </button>\n          <button\n            onClick={() => this.disable()}\n            className=\"btn btn-sm btn-primary\"\n          >\n            Disable product{\" \"}\n          </button>\n        </nav>\n        <div>\n          <label style={this.style}>ID:</label>\n          <input\n            style={this.style}\n            type=\"text\"\n            placeholder=\"Enter product ID\"\n            value={this.state.id}\n            name=\"id\"\n            onChange={(e) => this.setState({ id: e.target.value })}\n          ></input>\n          <label style={this.style}>Name:</label>\n          <input\n            style={this.style}\n            type=\"text\"\n            placeholder=\"Enter product Name\"\n            value={this.state.Name}\n            name=\"Name\"\n            onChange={(e) => this.setState({ Name: e.target.value })}\n          ></input>\n          <button\n            onClick={this.handlesubmit}\n            style={this.style}\n            className=\"btn btn-sm btn-primary\"\n          >\n            Add product\n          </button>\n        </div>\n        <div>\n          <Body items={this.state.items} onDelete={this.handledelete} />\n        </div>\n        <div>\n          <Navbar\n            lists={this.state.list}\n            Enableproduct={this.Enableproduct}\n            disableproduct={this.disableproduct}\n          />\n        </div>\n        <div>\n          <Enable lists={this.state.list} />\n        </div>\n        <div>\n          <Disable lists={this.state.list} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n//import HideShow from \"./Component/hideshow\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}